<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="512"
   height="512"
   viewBox="0 0 135.46666 135.46667"
   version="1.1"
   id="svg5"
   inkscape:version="1.2.2 (732a01da63, 2022-12-09)"
   sodipodi:docname="glvigor-logo.svg"
   xml:space="preserve"
   inkscape:export-filename="coforge-logo-base.png"
   inkscape:export-xdpi="48.463261"
   inkscape:export-ydpi="48.463261"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#343434"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#525252"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.2938725"
     inkscape:cx="209.83521"
     inkscape:cy="191.67268"
     inkscape:window-width="2330"
     inkscape:window-height="1610"
     inkscape:window-x="3070"
     inkscape:window-y="361"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer1"><inkscape:grid
       type="xygrid"
       id="grid7005" /></sodipodi:namedview><defs
     id="defs2"><linearGradient
       inkscape:collect="always"
       id="linearGradient14303"><stop
         style="stop-color:#f0cdb0;stop-opacity:1;"
         offset="0"
         id="stop14299" /><stop
         style="stop-color:#f0cdb0;stop-opacity:0;"
         offset="1"
         id="stop14301" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient7116"><stop
         style="stop-color:#d27528;stop-opacity:1;"
         offset="0"
         id="stop7112" /><stop
         style="stop-color:#d27528;stop-opacity:0;"
         offset="1"
         id="stop7114" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient72771"><stop
         style="stop-color:#6034f2;stop-opacity:1;"
         offset="0"
         id="stop72767" /><stop
         style="stop-color:#dbc9c9;stop-opacity:0;"
         offset="1"
         id="stop72769" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient72059"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop72055" /><stop
         style="stop-color:#ea6666;stop-opacity:0;"
         offset="1"
         id="stop72057" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient62083"><stop
         style="stop-color:#272727;stop-opacity:1;"
         offset="0"
         id="stop62079" /><stop
         style="stop-color:#d35959;stop-opacity:0;"
         offset="1"
         id="stop62081" /></linearGradient><linearGradient
       id="linearGradient60143"
       inkscape:swatch="solid"><stop
         style="stop-color:#156f5c;stop-opacity:1;"
         offset="0"
         id="stop60141" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient55829"><stop
         style="stop-color:#39d59d;stop-opacity:1;"
         offset="0"
         id="stop55825" /><stop
         style="stop-color:#156f5c;stop-opacity:0;"
         offset="1"
         id="stop55827" /></linearGradient><linearGradient
       inkscape:collect="always"
       id="linearGradient54951"><stop
         style="stop-color:#1b728b;stop-opacity:1;"
         offset="0"
         id="stop54947" /><stop
         style="stop-color:#fe3f4c;stop-opacity:0;"
         offset="1"
         id="stop54949" /></linearGradient><inkscape:perspective
       sodipodi:type="inkscape:persp3d"
       inkscape:vp_x="-22.084864 : 28.266861 : 1"
       inkscape:vp_y="0 : 1000 : 0"
       inkscape:vp_z="113.3818 : 28.266861 : 1"
       inkscape:persp3d-origin="45.648465 : 5.689083 : 1"
       id="perspective9969" /><linearGradient
       id="linearGradient1805"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop1803" /></linearGradient><linearGradient
       id="linearGradient26338"
       inkscape:swatch="solid"><stop
         style="stop-color:#3134ff;stop-opacity:1;"
         offset="0"
         id="stop26336" /></linearGradient><linearGradient
       id="a"
       x1="23.325"
       y1="-118.543"
       x2="7.26"
       y2="-104.193"
       gradientTransform="matrix(1, 0, 0, -1, 0, -96)"
       gradientUnits="userSpaceOnUse"><stop
         offset="0"
         stop-color="#5391fe"
         id="stop2093" /><stop
         offset="1"
         stop-color="#3e6dbf"
         id="stop2095" /></linearGradient><linearGradient
       id="b"
       x1="7.1"
       y1="-104.002"
       x2="23.001"
       y2="-118.292"
       xlink:href="#a" /><inkscape:perspective
       sodipodi:type="inkscape:persp3d"
       inkscape:vp_x="177.31719 : 15.579845 : 1"
       inkscape:vp_y="0 : 976.31087 : 0"
       inkscape:vp_z="-16.328893 : 15.579845 : 1"
       inkscape:persp3d-origin="80.494142 : -6.4631078 : 1"
       id="perspective9969-0" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter53298"
       x="-0.011994515"
       y="-0.011994515"
       width="1.023989"
       height="1.023989"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.069575046"
         id="feGaussianBlur53300" /></filter><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter54943"
       x="-0.014363352"
       y="-0.014363352"
       width="1.0287267"
       height="1.0287267"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="1.3237575"
         id="feGaussianBlur54945" /></filter><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient54951"
       id="radialGradient54973"
       cx="128"
       cy="128"
       fx="128"
       fy="128"
       r="131.17702"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient55829"
       id="linearGradient55859"
       x1="-3.6770182"
       y1="128"
       x2="259.67703"
       y2="128"
       gradientUnits="userSpaceOnUse" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter56367"
       x="-0.014624401"
       y="-0.014624401"
       width="1.0292488"
       height="1.0292488"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.027845215"
         id="feGaussianBlur56369" /></filter><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient62083"
       id="radialGradient62085"
       cx="132.03485"
       cy="128"
       fx="132.03485"
       fy="128"
       r="106.76407"
       gradientTransform="matrix(1,0,0,0.96220782,0,4.837399)"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient55829"
       id="linearGradient66083"
       gradientUnits="userSpaceOnUse"
       x1="-3.6770182"
       y1="128"
       x2="259.67703"
       y2="128" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter66155"
       x="-0.014540485"
       y="-0.014540485"
       width="1.029081"
       height="1.029081"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="1.0159675"
         id="feGaussianBlur66157" /></filter><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient72059"
       id="linearGradient72061"
       x1="35.431861"
       y1="63.391939"
       x2="96.962617"
       y2="63.391939"
       gradientUnits="userSpaceOnUse" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter72063"
       x="-0.30726508"
       y="-0.29484738"
       width="1.6093421"
       height="1.5896948"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="7.6483491"
         id="feGaussianBlur72065" /></filter><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient72771"
       id="radialGradient72775"
       cx="66.037628"
       cy="63.391941"
       fx="66.037628"
       fy="63.391941"
       r="31.223246"
       gradientTransform="matrix(1,0,0,1.0190063,0,-1.2048446)"
       gradientUnits="userSpaceOnUse" /><filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter5092"
       x="-0.044892247"
       y="-0.041470869"
       width="1.0897872"
       height="1.08091"><feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.49016209"
         id="feGaussianBlur5094" /></filter><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7116"
       id="radialGradient7120"
       cx="16.147703"
       cy="15.655042"
       fx="16.147703"
       fy="15.655042"
       r="15.076335"
       gradientTransform="matrix(1,0,0,1.0031261,0,-0.04893918)"
       gradientUnits="userSpaceOnUse" /><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient62083"
       id="radialGradient12557"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.1014058,0,0,1.0597813,-13.341191,-7.2907543)"
       cx="132.03485"
       cy="128"
       fx="132.03485"
       fy="128"
       r="106.76407" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient55829"
       id="linearGradient12559"
       gradientUnits="userSpaceOnUse"
       x1="-3.6770182"
       y1="128"
       x2="259.67703"
       y2="128"
       gradientTransform="matrix(1.1014058,0,0,1.1014058,-13.341191,-12.618693)" /><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient14303"
       id="radialGradient14305"
       cx="15.929"
       cy="15.565"
       fx="15.929"
       fy="15.565"
       r="14.807"
       gradientTransform="matrix(1,0,0,1.0080367,0,-0.12509185)"
       gradientUnits="userSpaceOnUse" /></defs><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><circle
     style="display:inline;opacity:1;fill:#12051c;fill-opacity:0.778462;fill-rule:nonzero;stroke:#7937d9;stroke-width:2.571;stroke-linecap:square;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:0.50153798;paint-order:markers fill stroke;filter:url(#filter53298);stop-color:#000000"
     id="path48010-6"
     cx="67.917717"
     cy="67.537376"
     r="60.547684"
     sodipodi:insensitive="true"
     inkscape:label="circle-background" /><g
     id="g54574"
     transform="matrix(0.4470227,0,0,0.4470227,10.668874,10.090491)"
     style="display:inline;stroke:url(#linearGradient55859);filter:url(#filter56367)"
     inkscape:label="circle-marble-center"
     sodipodi:insensitive="true"><circle
       cx="128"
       cy="128"
       r="128"
       id="circle54559"
       style="display:inline;fill:url(#radialGradient54973);fill-opacity:1;stroke:url(#linearGradient55859);filter:url(#filter54943)"
       sodipodi:insensitive="true" /><circle
       cx="127.63874"
       stroke="#ffffff"
       stroke-width="18"
       cy="128.36127"
       r="111.24199"
       id="circle54561"
       style="display:inline;opacity:0.508475;fill:url(#radialGradient12557);fill-opacity:1;stroke:url(#linearGradient12559);stroke-width:1.09889;stroke-dasharray:none"
       sodipodi:insensitive="true" /><use
       id="use66081"
       inkscape:spray-origin="#circle54561"
       xlink:href="#circle54561"
       style="display:inline;opacity:1;mix-blend-mode:normal;stroke:url(#linearGradient66083);filter:url(#filter66155)"
       transform="translate(15.097449,-16.050445)"
       sodipodi:insensitive="true" /><circle
       cx="128"
       stroke="#ffffff"
       stroke-width="18"
       cy="128"
       r="101"
       id="circle69586"
       style="display:inline;opacity:0.508475;fill:url(#radialGradient62085);fill-opacity:1;stroke:url(#linearGradient55859);stroke-width:0.997712;stroke-dasharray:none"
       sodipodi:insensitive="true" /><circle
       cx="128"
       stroke="#ffffff"
       stroke-width="18"
       cy="128"
       r="101"
       id="circle72779"
       style="display:inline;opacity:0.508475;fill:url(#radialGradient62085);fill-opacity:1;stroke:url(#linearGradient55859);stroke-width:0.997712;stroke-dasharray:none"
       sodipodi:insensitive="true" /></g><path
     d="m 55.942132,92.57991 c 0,-2.301323 0.01574,-2.329694 1.458651,-2.600221 4.354072,-0.816781 6.338568,-6.741638 3.419877,-10.210157 -1.554544,-1.847386 -2.312359,-2.144793 -6.604747,-2.588662 -6.462515,-0.668672 -11.92905,-3.266806 -16.504849,-7.844769 l -2.279203,-2.27978 10.255145,-0.11515 10.255086,-0.115152 v -1.287512 -1.287511 h 20.510211 20.51027 v 2.541372 2.541907 l -1.907343,0.288871 c -2.333007,0.352005 -5.018417,2.226194 -6.594939,4.608418 -1.385589,2.093831 -1.850165,6.220538 -0.992685,8.818651 1.07905,3.269447 5.284219,6.645527 8.307559,6.669689 1.162429,0 1.187452,0.06353 1.187452,2.600217 v 2.590731 h -7.772326 c -7.607814,0 -7.772282,0 -7.772282,-0.906718 0,-0.499123 -0.660731,-1.567455 -1.468181,-2.374861 -1.231326,-1.231326 -1.779287,-1.46818 -3.396132,-1.46818 -2.326693,0 -3.922275,1.104261 -4.698773,3.251578 l -0.541806,1.498163 H 63.627574 55.942033 V 92.58378 Z M 45.264957,63.709664 C 45.03386,63.410271 44.29828,61.183005 43.629806,58.754562 l -1.215244,-4.41564 -1.950625,0.09927 c -1.950029,0.09927 -1.950625,0.0953 -2.498348,-1.758242 -0.677607,-2.295543 -0.438171,-2.979999 1.167596,-3.332482 0.689915,-0.152873 1.330197,-0.404419 1.422715,-0.566227 0.09331,-0.156844 -0.284702,-1.844805 -0.838223,-3.744823 l -1.006582,-3.454344 2.413672,-4.533828 c 2.576274,-4.839554 2.848528,-5.164699 4.330864,-5.175221 1.192413,0 1.464409,0.514806 2.905767,5.607019 0.638891,2.256134 1.445547,5.093782 1.792788,6.306684 l 0.631149,2.204156 20.989439,-6.002565 c 11.544166,-3.302006 21.294273,-5.944233 21.666827,-5.872801 0.729822,0.140962 1.89166,3.469572 1.535287,4.398308 -0.262069,0.682768 0.852914,0.336123 -22.626913,7.018458 -10.568139,3.007258 -19.376983,5.609064 -19.575221,5.782406 -0.313094,0.273187 0.0814,2.008201 1.828723,8.049103 0.576353,1.991921 -0.07146,2.567638 -4.275016,3.796302 -4.257365,1.244431 -4.50373,1.271233 -5.063862,0.550942 z m 24.494588,-3.464329 c 0.119122,-0.121107 4.678541,-1.428275 10.132907,-2.906441 5.454404,-1.478108 10.141502,-2.774096 10.41592,-2.879162 0.274179,-0.105225 0.593823,0.304754 0.709967,0.912872 0.115152,0.607721 0.18464,1.104659 0.150889,1.104659 -0.160814,0 -19.201854,3.480612 -20.330039,3.716472 -0.712549,0.146918 -1.19817,0.172728 -1.079445,0.05361 z m -9.031721,-1.334764 c 0.378213,-0.33096 19.825398,-8.910057 20.197516,-8.910057 0.215412,0 0.489591,0.37305 0.609309,0.831472 0.258495,0.988118 0.910888,0.700637 -11.330481,4.988736 -8.930644,3.128127 -9.870241,3.43439 -9.476384,3.089771 z"
     id="path72033"
     style="display:inline;opacity:1;fill:url(#radialGradient72775);fill-opacity:1;stroke:url(#linearGradient72061);stroke-width:0.461;stroke-dasharray:none;filter:url(#filter72063)"
     inkscape:label="forge-color-tone"
     sodipodi:insensitive="true" /><g
     style="display:none;fill:#000000"
     id="g4565"
     transform="matrix(1.1613694,0.77082673,-0.77082673,1.1613694,82.960552,44.565904)"><path
       d="m 29.129,20.755 1.336,-0.086 c -0.693,-0.546 -1.356,-1.004 -1.927,-2.266 -0.346,-1.591 -0.889,-3.088 -3.351,-3.588 0.111,0.16 0.215,0.322 0.312,0.484 -0.535,-0.195 -1.089,-0.195 -1.661,-0.03 0,-0.027 10e-4,-0.054 10e-4,-0.081 0,-1.184 -0.141,-2.323 -0.399,-3.388 0.954,0.165 1.782,-0.001 2.447,-0.595 -0.026,0.197 -0.058,0.398 -0.097,0.603 C 27.554,10.55 27.836,9.431 27.775,8.327 28,6.961 28.521,6.347 29.05,5.64 L 27.533,5.943 C 27.55,5.244 27.742,4.518 28.37,3.737 23.924,4.073 26.149,6.198 25.967,10.293 L 23.221,11 C 22.462,8.549 21.055,6.563 19.294,5.437 c 0.104,-0.073 0.201,-0.149 0.293,-0.228 0.407,0.426 0.981,0.692 1.617,0.692 1.236,0 2.238,-1.002 2.238,-2.238 0,-1.236 -1.002,-2.238 -2.238,-2.238 -0.554,0 -1.061,0.202 -1.452,0.535 -0.803,-0.795 -2.204,-1.321 -3.8,-1.321 -1.596,0 -2.997,0.527 -3.8,1.321 -0.391,-0.333 -0.897,-0.535 -1.451,-0.535 -1.236,0 -2.238,1.002 -2.238,2.238 0,1.236 1.002,2.238 2.238,2.238 0.636,0 1.209,-0.265 1.617,-0.691 0.092,0.079 0.189,0.155 0.293,0.228 -1.764,1.127 -3.171,3.118 -3.93,5.574 L 5.89,10.294 C 5.708,6.199 7.933,4.074 3.487,3.738 4.111,4.514 4.304,5.236 4.323,5.932 L 2.868,5.641 C 3.365,6.306 3.856,6.888 4.1,8.092 3.988,9.273 4.177,10.461 6.067,11.808 6.028,11.603 5.996,11.402 5.97,11.205 6.646,11.809 7.492,11.97 8.467,11.79 8.207,12.858 8.065,14 8.065,15.187 c 0,0.032 0.001,0.063 0.001,0.095 -0.588,-0.179 -1.159,-0.184 -1.709,0.016 0.098,-0.162 0.201,-0.324 0.312,-0.484 -2.558,0.52 -3.045,2.115 -3.391,3.774 -0.55,1.122 -1.181,1.561 -1.839,2.079 l 1.289,0.083 c -0.293,0.734 -0.755,1.378 -1.606,1.816 4.157,1.487 2.98,-2.414 4.721,-6.283 l 2.264,0.023 c 0.115,1.52 0.462,2.947 0.992,4.212 -1.08,0.299 -1.844,0.855 -2.184,1.756 -1.408,1.453 -0.767,2.403 0.476,3.579 0.411,1.192 0.275,1.952 0.176,2.787 l 1.238,-1.087 c 0.219,0.91 0.109,1.564 0.024,2.272 l 1.357,-1.192 c 0.436,0.546 0.839,1.159 1.169,1.858 1.426,-4.255 -2.964,-4.797 -3.807,-7.556 l 1.833,-1.797 c 1.413,2.9 3.829,4.811 6.572,4.811 2.734,0 5.142,-1.898 6.557,-4.78 l 1.801,1.765 c -0.843,2.759 -5.233,3.301 -3.807,7.556 0.324,-0.688 0.72,-1.291 1.147,-1.831 l 1.326,1.165 c -0.085,-0.709 -0.195,-1.363 0.024,-2.272 l 1.238,1.087 c -0.098,-0.818 -0.23,-1.564 0.151,-2.715 1.293,-1.209 1.989,-2.168 0.553,-3.651 -0.336,-0.889 -1.083,-1.443 -2.141,-1.745 0.533,-1.268 0.881,-2.699 0.997,-4.224 l 2.216,-0.022 c 1.741,3.87 0.564,7.77 4.721,6.283 -0.85,-0.437 -1.312,-1.08 -1.605,-1.813 z M 11.022,19.132 10.379,9.678 11.817,9.182 Z m 2.514,3.412 -0.634,-13.931 1.418,-0.73 -0.784,14.662 z m 5.053,0 -0.784,-14.662 1.418,0.73 -0.634,13.931 z m 1.719,-13.362 1.438,0.496 -0.643,9.454 z"
       id="path5058"
       style="display:inline;opacity:1;fill:#26005d;fill-opacity:0.805714;stroke:url(#radialGradient14305);stroke-width:0.390322;stroke-dasharray:none;stroke-opacity:1"
       inkscape:label="beetle-base" /><path
       d="m 29.347632,20.755 1.336,-0.086 c -0.693,-0.546 -1.356,-1.004 -1.927,-2.266 -0.346,-1.591 -0.889,-3.088 -3.351,-3.588 0.111,0.16 0.215,0.322 0.312,0.484 -0.535,-0.195 -1.089,-0.195 -1.661,-0.03 0,-0.027 0.001,-0.054 0.001,-0.081 0,-1.184 -0.141,-2.323 -0.399,-3.388 0.954,0.165 1.782,-0.001 2.447,-0.595 -0.026,0.197 -0.058,0.398 -0.097,0.603 1.764,-1.258 2.046,-2.3769997 1.985,-3.481 0.225,-1.366 0.746,-1.98 1.275,-2.687 l -1.517,0.303 c 0.017,-0.699 0.209,-1.425 0.837,-2.206 -4.446,0.336 -2.221,2.461 -2.403,6.556 l -2.746,0.707 c -0.759,-2.451 -2.166,-4.437 -3.927,-5.563 0.104,-0.073 0.201,-0.149 0.293,-0.228 0.407,0.426 0.981,0.692 1.617,0.692 1.236,0 2.238,-1.002 2.238,-2.238 0,-1.236 -1.002,-2.238 -2.238,-2.238 -0.554,0 -1.061,0.202 -1.452,0.535 -0.803,-0.795 -2.204,-1.32100004 -3.8,-1.32100004 -1.596,0 -2.997,0.52700004 -3.8,1.32100004 -0.391,-0.333 -0.897,-0.535 -1.451,-0.535 -1.2360001,0 -2.2380001,1.002 -2.2380001,2.238 0,1.236 1.002,2.238 2.2380001,2.238 0.636,0 1.209,-0.265 1.617,-0.691 0.092,0.079 0.189,0.155 0.293,0.228 -1.764,1.127 -3.1710001,3.118 -3.9300001,5.574 l -2.791,-0.718 c -0.182,-4.095 2.043,-6.22 -2.403,-6.556 0.624,0.776 0.817,1.498 0.836,2.194 l -1.455,-0.291 c 0.497,0.665 0.988,1.247 1.232,2.451 -0.112,1.181 0.077,2.369 1.967,3.716 -0.039,-0.205 -0.071,-0.406 -0.097,-0.603 0.676,0.604 1.522,0.765 2.497,0.585 -0.26,1.068 -0.402,2.21 -0.402,3.397 0,0.032 0.001,0.063 0.001,0.095 -0.588,-0.179 -1.159,-0.184 -1.709,0.016 0.098,-0.162 0.201,-0.324 0.312,-0.484 -2.558,0.52 -3.045,2.115 -3.391,3.774 -0.55,1.122 -1.181,1.561 -1.839,2.079 l 1.289,0.083 c -0.293,0.734 -0.755,1.378 -1.606,1.816 4.157,1.487 2.98,-2.414 4.721,-6.283 l 2.264,0.023 c 0.115,1.52 0.462,2.947 0.992,4.212 -1.08,0.299 -1.844,0.855 -2.184,1.756 -1.408,1.453 -0.767,2.403 0.476,3.579 0.411,1.192 0.275,1.952 0.176,2.787 l 1.238,-1.087 c 0.219,0.91 0.109,1.564 0.024,2.272 l 1.3570001,-1.192 c 0.436,0.546 0.839,1.159 1.169,1.858 1.426,-4.255 -2.9640001,-4.797 -3.8070001,-7.556 l 1.833,-1.797 c 1.4130001,2.9 3.8290001,4.811 6.5720001,4.811 2.734,0 5.142,-1.898 6.557,-4.78 l 1.801,1.765 c -0.843,2.759 -5.233,3.301 -3.807,7.556 0.324,-0.688 0.72,-1.291 1.147,-1.831 l 1.326,1.165 c -0.085,-0.709 -0.195,-1.363 0.024,-2.272 l 1.238,1.087 c -0.098,-0.818 -0.23,-1.564 0.151,-2.715 1.293,-1.209 1.989,-2.168 0.553,-3.651 -0.336,-0.889 -1.083,-1.443 -2.141,-1.745 0.533,-1.268 0.881,-2.699 0.997,-4.224 l 2.216,-0.022 c 1.741,3.87 0.564,7.77 4.721,6.283 -0.85,-0.437 -1.312,-1.08 -1.605,-1.813 z m -18.107,-1.623 -0.643,-9.4539998 1.438,-0.4960002 z m 2.514,3.412 -0.634,-13.931 1.418,-0.73 -0.784,14.662 z m 5.053,0 -0.784,-14.662 1.418,0.73 -0.634,13.931 z m 1.719,-13.362 1.438,0.4960002 -0.643,9.4539998 z"
       id="path4556"
       style="display:inline;opacity:1;mix-blend-mode:normal;fill:none;fill-opacity:1;stroke:url(#radialGradient7120);stroke-width:0.214845;stroke-dasharray:1.71876, 0.429689, 0.214845, 0.429689;stroke-dashoffset:0;stroke-opacity:1"
       inkscape:label="beetle-outline" /><path
       d="m 29.129,20.755 1.336,-0.086 c -0.693,-0.546 -1.356,-1.004 -1.927,-2.266 -0.346,-1.591 -0.889,-3.088 -3.351,-3.588 0.111,0.16 0.215,0.322 0.312,0.484 -0.535,-0.195 -1.089,-0.195 -1.661,-0.03 0,-0.027 10e-4,-0.054 10e-4,-0.081 0,-1.184 -0.141,-2.323 -0.399,-3.388 0.954,0.165 1.782,-0.001 2.447,-0.595 -0.026,0.197 -0.058,0.398 -0.097,0.603 C 27.554,10.55 27.836,9.431 27.775,8.327 28,6.961 28.521,6.347 29.05,5.64 L 27.533,5.943 C 27.55,5.244 27.742,4.518 28.37,3.737 23.924,4.073 26.149,6.198 25.967,10.293 L 23.221,11 C 22.462,8.549 21.055,6.563 19.294,5.437 c 0.104,-0.073 0.201,-0.149 0.293,-0.228 0.407,0.426 0.981,0.692 1.617,0.692 1.236,0 2.238,-1.002 2.238,-2.238 0,-1.236 -1.002,-2.238 -2.238,-2.238 -0.554,0 -1.061,0.202 -1.452,0.535 -0.803,-0.795 -2.204,-1.321 -3.8,-1.321 -1.596,0 -2.997,0.527 -3.8,1.321 -0.391,-0.333 -0.897,-0.535 -1.451,-0.535 -1.236,0 -2.238,1.002 -2.238,2.238 0,1.236 1.002,2.238 2.238,2.238 0.636,0 1.209,-0.265 1.617,-0.691 0.092,0.079 0.189,0.155 0.293,0.228 -1.764,1.127 -3.171,3.118 -3.93,5.574 L 5.89,10.294 C 5.708,6.199 7.933,4.074 3.487,3.738 4.111,4.514 4.304,5.236 4.323,5.932 L 2.868,5.641 C 3.365,6.306 3.856,6.888 4.1,8.092 3.988,9.273 4.177,10.461 6.067,11.808 6.028,11.603 5.996,11.402 5.97,11.205 6.646,11.809 7.492,11.97 8.467,11.79 8.207,12.858 8.065,14 8.065,15.187 c 0,0.032 0.001,0.063 0.001,0.095 -0.588,-0.179 -1.159,-0.184 -1.709,0.016 0.098,-0.162 0.201,-0.324 0.312,-0.484 -2.558,0.52 -3.045,2.115 -3.391,3.774 -0.55,1.122 -1.181,1.561 -1.839,2.079 l 1.289,0.083 c -0.293,0.734 -0.755,1.378 -1.606,1.816 4.157,1.487 2.98,-2.414 4.721,-6.283 l 2.264,0.023 c 0.115,1.52 0.462,2.947 0.992,4.212 -1.08,0.299 -1.844,0.855 -2.184,1.756 -1.408,1.453 -0.767,2.403 0.476,3.579 0.411,1.192 0.275,1.952 0.176,2.787 l 1.238,-1.087 c 0.219,0.91 0.109,1.564 0.024,2.272 l 1.357,-1.192 c 0.436,0.546 0.839,1.159 1.169,1.858 1.426,-4.255 -2.964,-4.797 -3.807,-7.556 l 1.833,-1.797 c 1.413,2.9 3.829,4.811 6.572,4.811 2.734,0 5.142,-1.898 6.557,-4.78 l 1.801,1.765 c -0.843,2.759 -5.233,3.301 -3.807,7.556 0.324,-0.688 0.72,-1.291 1.147,-1.831 l 1.326,1.165 c -0.085,-0.709 -0.195,-1.363 0.024,-2.272 l 1.238,1.087 c -0.098,-0.818 -0.23,-1.564 0.151,-2.715 1.293,-1.209 1.989,-2.168 0.553,-3.651 -0.336,-0.889 -1.083,-1.443 -2.141,-1.745 0.533,-1.268 0.881,-2.699 0.997,-4.224 l 2.216,-0.022 c 1.741,3.87 0.564,7.77 4.721,6.283 -0.85,-0.437 -1.312,-1.08 -1.605,-1.813 z M 11.022,19.132 10.379,9.678 11.817,9.182 Z m 2.514,3.412 -0.634,-13.931 1.418,-0.73 -0.784,14.662 z m 5.053,0 -0.784,-14.662 1.418,0.73 -0.634,13.931 z m 1.719,-13.362 1.438,0.496 -0.643,9.454 z"
       id="path5038"
       style="display:inline;mix-blend-mode:normal;fill:none;fill-opacity:0.754286;stroke:#6bd7e3;stroke-width:0.123949;stroke-dasharray:0.495796, 0.247898, 0.123949, 0.247898;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter5092)"
       inkscape:label="beetle-glow" /><path
       d="m 29.251975,20.937056 1.36247,-0.0877 c -0.70673,-0.556818 -1.382866,-1.023893 -1.96518,-2.310897 -0.352855,-1.622522 -0.906613,-3.149182 -3.417393,-3.659089 0.113199,0.16317 0.21926,0.32838 0.318182,0.49359 -0.5456,-0.198864 -1.110577,-0.198864 -1.69391,-0.03059 0,-0.02754 0.001,-0.05507 0.001,-0.0826 0,-1.207458 -0.143794,-2.369025 -0.406906,-3.455126 0.972902,0.168269 1.817307,-10e-4 2.495483,-0.606789 -0.02651,0.200903 -0.05915,0.405886 -0.09892,0.614947 1.79895,-1.282925 2.086538,-2.4240952 2.024329,-3.5499688 0.229458,-1.3930647 0.760781,-2.0192299 1.300262,-2.7402377 l -1.547057,0.3090034 c 0.01734,-0.7128494 0.213141,-1.4532336 0.853584,-2.2497076 -4.534089,0.3426572 -2.265005,2.5097599 -2.450611,6.6858947 l -2.800407,0.721007 c -0.77402,-2.4995753 -2.208897,-4.5249241 -4.004787,-5.6732335 0.10606,-0.074446 0.204982,-0.1519522 0.298805,-0.2325174 0.415064,0.4344403 1.000436,0.7057106 1.649037,0.7057106 1.260489,0 2.282342,-1.0218527 2.282342,-2.2823416 0,-1.2604889 -1.021853,-2.2823416 -2.282342,-2.2823416 -0.564976,0 -1.082021,0.2060023 -1.480768,0.5456 -0.81891,-0.81075137 -2.247668,-1.34717301 -3.87529,-1.34717301 -1.627621,0 -3.056379,0.53744144 -3.875289,1.34717301 -0.398747,-0.3395977 -0.914773,-0.5456 -1.479749,-0.5456 -1.2604887,0 -2.2823413,1.0218527 -2.2823413,2.2823416 0,1.2604889 1.0218526,2.2823416 2.2823413,2.2823416 0.648601,0 1.232954,-0.2702504 1.649038,-0.7046908 0.09382,0.080565 0.192744,0.158071 0.298805,0.2325174 -1.79895,1.1493293 -3.233827,3.179777 -4.0078651,5.6844377 L 5.5525397,10.268791 C 5.3669337,6.092657 7.6360178,3.9255543 3.101929,3.5828971 3.7382923,4.374272 3.9351162,5.110577 3.9544927,5.8203669 L 2.4706647,5.5236013 C 2.9775118,6.201777 3.47824,6.7953082 3.7270744,8.0231631 3.6128553,9.2275623 3.8056004,10.4391 5.7330466,11.812788 c -0.039773,-0.209061 -0.072407,-0.414044 -0.098922,-0.614947 0.6893936,0.615967 1.5521554,0.780157 2.5464731,0.596591 -0.2651514,1.08916 -0.4099648,2.253786 -0.4099648,3.464305 0,0.03263 0.00102,0.06425 0.00102,0.09688 -0.5996501,-0.182547 -1.1819633,-0.187646 -1.7428605,0.01632 0.099942,-0.16521 0.2049824,-0.33042 0.3181817,-0.49359 -2.6086818,0.530303 -3.1053307,2.156905 -3.4581861,3.848775 -0.5608971,1.14423 -1.2043992,1.591928 -1.8754362,2.120191 l 1.3145391,0.08465 C 2.0290856,21.680505 1.557932,22.337265 0.69007116,22.783943 4.9294339,24.300405 3.729114,20.322114 5.5046085,16.376458 l 2.3088567,0.02345 c 0.1172785,1.550116 0.4711537,3.005389 1.0116546,4.295453 -1.1013981,0.304924 -1.8805353,0.87194 -2.2272717,1.790792 -1.4358968,1.481788 -0.7821966,2.45061 0.485431,3.64991 0.4191432,1.215618 0.2804486,1.990676 0.1794871,2.842219 l 1.2625285,-1.108536 c 0.2233391,0.92803 0.1111597,1.594987 0.024476,2.317015 l 1.3838854,-1.215618 c 0.4446389,0.556818 0.8556229,1.181963 1.1921619,1.894812 1.454253,-4.339304 -3.0227259,-4.892043 -3.8824283,-7.705707 l 1.8693174,-1.832604 c 1.4409959,2.957458 3.9048639,4.906321 6.7022109,4.906321 2.788169,0 5.243879,-1.935606 6.686914,-4.874707 l 1.836684,1.79997 c -0.859703,2.813664 -5.336682,3.366403 -3.882429,7.705708 0.33042,-0.701632 0.734266,-1.316579 1.169726,-1.867278 l 1.352272,1.188082 c -0.08668,-0.723047 -0.198864,-1.390005 0.02448,-2.317015 l 1.262528,1.108537 c -0.09994,-0.834207 -0.234557,-1.594988 0.153992,-2.768793 1.318618,-1.232954 2.028408,-2.210954 0.563956,-3.723337 -0.342657,-0.906614 -1.104457,-1.47159 -2.183419,-1.779574 0.54356,-1.293123 0.898455,-2.752475 1.016753,-4.30769 l 2.259906,-0.02244 c 1.775495,3.946676 0.575175,7.923947 4.814537,6.407485 -0.866841,-0.445658 -1.337994,-1.101398 -1.6368,-1.848921 z M 10.78622,19.281899 10.13048,9.6405866 11.596971,9.1347593 Z M 13.35003,22.761501 12.703469,8.5544857 14.149563,7.8100222 13.35003,22.762521 Z m 5.153115,0 -0.799533,-14.9524986 1.446095,0.7444635 -0.646562,14.2070151 z m 1.753059,-13.6267417 1.466491,0.5058273 -0.65574,9.6413124 z"
       id="path5096"
       style="display:inline;opacity:1;fill:none;fill-opacity:1;stroke:#e3c66b;stroke-width:0.0950274;stroke-dasharray:none;stroke-opacity:1"
       inkscape:label="beetle-outline-outline" /></g><g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="v"
     transform="translate(-4.6993666,6.7960078)"><g
       style="fill:#000000"
       id="g16402"
       transform="matrix(2.036996,0,0,2.036996,40.093561,26.656117)"><path
         d="m 25.271,21.676 c 0,5.103 -4.136,9.24 -9.24,9.24 -5.104,0 -9.24,-4.136 -9.24,-9.24 0,-5.104 4.136,-9.24 9.24,-9.24 5.104,0 9.24,4.137 9.24,9.24 z M 9.772,8.197 c 1.565,1.068 2.412,3.679 2.064,5.244 0.634,-0.324 1.311,-0.576 2.02,-0.747 C 12.664,11.752 11.9,9.298 12.785,7.573 13.61,5.966 12.132,4.262 10.5,4.756 8.604,5.33 8.751,7.502 9.771,8.198 Z m 7.774,4.363 c 1.062,0.175 2.062,0.531 2.969,1.035 C 19.78,11.41 20.792,7.658 23.358,6.123 24.858,5.225 25.2,2 22.515,1.188 c -2.31,-0.7 -4.373,1.698 -3.235,3.988 1.361,2.74 0.214,6.171 -1.733,7.384 z M 7.178,19.027 C 7.699,17.284 8.72,15.758 10.074,14.614 8.183,12.501 7.028,9.548 6.823,6.553 6.57,2.871 3.624,1.985 1.929,3.155 0.254,4.311 -0.189,7.49 3.179,9.506 c 3.208,1.919 4.658,6.008 3.999,9.521 z M 29.503,7.588 c -2.062,-0.953 -5.127,0.729 -5.152,3.865 -0.012,1.463 -0.548,2.848 -1.545,3.94 1.211,1.305 2.05,2.961 2.346,4.798 -0.355,-3.266 0.005,-5.061 1.962,-5.597 5.95,-1.626 4.835,-5.876 2.388,-7.007 z"
         id="path16393" /></g></g></svg>
